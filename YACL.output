Terminals unused in grammar

   ERROR


Grammar

    0 $accept: prog $end

    1 prog: dcl SEMI prog
    2     | func prog
    3     | /* empty */

    4 dcl: funcdcl
    5    | vardcl

    6 funcdcl: type ID LP parm_types RP
    7        | VOID ID LP parm_types RP

    8 vardcl: type ID arraylist decllist

    9 decllist: COMMA ID arraylist decllist
   10         | /* empty */

   11 parmlist: COMMA type ID multidim parmlist
   12         | /* empty */

   13 arraylist: LB INTCON RB arraylist
   14          | /* empty */

   15 type: CHAR
   16     | INT
   17     | FLOAT

   18 multidim: LB RB multidim
   19         | /* empty */

   20 parm_types: VOID
   21           | type ID multidim parmlist

   22 funcbody: stmt funcbody
   23         | vardcl SEMI funcbody
   24         | /* empty */

   25 func: type ID LP parm_types RP LA funcbody RA
   26     | VOID ID LP parm_types RP LA funcbody RA

   27 exprlist: COMMA expr exprlist
   28         | /* empty */

   29 stmtlist: stmt stmtlist
   30         | vardcl stmtlist
   31         | /* empty */

   32 stmt: IF LP expr RP stmt ELSE stmt
   33     | IF LP expr RP stmt
   34     | WHILE LP expr RP stmt
   35     | FOR LP assg SEMI expr SEMI assg RP stmt
   36     | FOR LP assg SEMI expr SEMI RP stmt
   37     | FOR LP assg SEMI SEMI assg RP stmt
   38     | FOR LP SEMI expr SEMI assg RP stmt
   39     | FOR LP SEMI SEMI assg RP stmt
   40     | FOR LP SEMI expr SEMI RP stmt
   41     | FOR LP assg SEMI SEMI RP stmt
   42     | FOR LP SEMI SEMI RP stmt
   43     | RETURN expr SEMI
   44     | RETURN SEMI
   45     | LA stmtlist RA
   46     | expr SEMI
   47     | SEMI
   48     | BREAK SEMI
   49     | CONTINUE SEMI

   50 multidim_ind: LB expr RB multidim_ind
   51             | /* empty */

   52 assg: expr_left ASSG expr
   53     | expr_left PLUSASSG expr
   54     | expr_left MINUSASSG expr
   55     | expr_left DIVIDEASSG expr
   56     | expr_left MULTIPLYASSG expr

   57 expr_left: ID multidim_ind

   58 expr: MINUS expr
   59     | NOT expr
   60     | expr PLUS expr
   61     | expr MINUS expr
   62     | expr MULTIPLY expr
   63     | expr DIVIDE expr
   64     | expr EQ expr
   65     | expr NEQ expr
   66     | expr LE expr
   67     | expr GE expr
   68     | expr GT expr
   69     | expr LT expr
   70     | expr AND expr
   71     | expr OR expr
   72     | expr_left
   73     | ID LP RP
   74     | ID LP expr exprlist RP
   75     | assg
   76     | LP expr RP
   77     | INTCON
   78     | CHARCON
   79     | FLOATCON
   80     | expr_left SELFPLUS
   81     | expr_left SELFMINUS


Terminals, with rules where they appear

$end (0) 0
error (256)
INTCON (258) 13 77
CHARCON (259) 78
FLOATCON (260) 79
ID (261) 6 7 8 9 11 21 25 26 57 73 74
LT (262) 69
LE (263) 66
GE (264) 67
GT (265) 68
EQ (266) 64
NEQ (267) 65
PLUS (268) 60
MINUS (269) 58 61
MULTIPLY (270) 62
DIVIDE (271) 63
PLUSASSG (272) 53
MINUSASSG (273) 54
MULTIPLYASSG (274) 56
DIVIDEASSG (275) 55
NOT (276) 59
AND (277) 70
OR (278) 71
SELFMINUS (279) 81
SELFPLUS (280) 80
WHILE (281) 34
FOR (282) 35 36 37 38 39 40 41 42
BREAK (283) 48
CONTINUE (284) 49
RETURN (285) 43 44
IF (286) 32 33
INT (287) 16
FLOAT (288) 17
CHAR (289) 15
VOID (290) 7 20 26
LB (291) 13 18 50
RB (292) 13 18 50
LP (293) 6 7 25 26 32 33 34 35 36 37 38 39 40 41 42 73 74 76
RP (294) 6 7 25 26 32 33 34 35 36 37 38 39 40 41 42 73 74 76
LA (295) 25 26 45
RA (296) 25 26 45
COMMA (297) 9 11 27
SEMI (298) 1 23 35 36 37 38 39 40 41 42 43 44 46 47 48 49
ERROR (299)
NO_ELSE (300)
ELSE (301) 32
ASSG (302) 52
UMINUS (303)
UNOT (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
prog (51)
    on left: 1 2 3, on right: 0 1 2
dcl (52)
    on left: 4 5, on right: 1
funcdcl (53)
    on left: 6 7, on right: 4
vardcl (54)
    on left: 8, on right: 5 23 30
decllist (55)
    on left: 9 10, on right: 8 9
parmlist (56)
    on left: 11 12, on right: 11 21
arraylist (57)
    on left: 13 14, on right: 8 9 13
type (58)
    on left: 15 16 17, on right: 6 8 11 21 25
multidim (59)
    on left: 18 19, on right: 11 18 21
parm_types (60)
    on left: 20 21, on right: 6 7 25 26
funcbody (61)
    on left: 22 23 24, on right: 22 23 25 26
func (62)
    on left: 25 26, on right: 2
exprlist (63)
    on left: 27 28, on right: 27 74
stmtlist (64)
    on left: 29 30 31, on right: 29 30 45
stmt (65)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49,
    on right: 22 29 32 33 34 35 36 37 38 39 40 41 42
multidim_ind (66)
    on left: 50 51, on right: 50 57
assg (67)
    on left: 52 53 54 55 56, on right: 35 36 37 38 39 41 75
expr_left (68)
    on left: 57, on right: 52 53 54 55 56 72 80 81
expr (69)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
    76 77 78 79 80 81, on right: 27 32 33 34 35 36 38 40 43 46 50 52
    53 54 55 56 58 59 60 61 62 63 64 65 66 67 68 69 70 71 74 76


State 0

    0 $accept: . prog $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4

    $default  reduce using rule 3 (prog)

    prog     go to state 5
    dcl      go to state 6
    funcdcl  go to state 7
    vardcl   go to state 8
    type     go to state 9
    func     go to state 10


State 1

   16 type: INT .

    $default  reduce using rule 16 (type)


State 2

   17 type: FLOAT .

    $default  reduce using rule 17 (type)


State 3

   15 type: CHAR .

    $default  reduce using rule 15 (type)


State 4

    7 funcdcl: VOID . ID LP parm_types RP
   26 func: VOID . ID LP parm_types RP LA funcbody RA

    ID  shift, and go to state 11


State 5

    0 $accept: prog . $end

    $end  shift, and go to state 12


State 6

    1 prog: dcl . SEMI prog

    SEMI  shift, and go to state 13


State 7

    4 dcl: funcdcl .

    $default  reduce using rule 4 (dcl)


State 8

    5 dcl: vardcl .

    $default  reduce using rule 5 (dcl)


State 9

    6 funcdcl: type . ID LP parm_types RP
    8 vardcl: type . ID arraylist decllist
   25 func: type . ID LP parm_types RP LA funcbody RA

    ID  shift, and go to state 14


State 10

    2 prog: func . prog

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4

    $default  reduce using rule 3 (prog)

    prog     go to state 15
    dcl      go to state 6
    funcdcl  go to state 7
    vardcl   go to state 8
    type     go to state 9
    func     go to state 10


State 11

    7 funcdcl: VOID ID . LP parm_types RP
   26 func: VOID ID . LP parm_types RP LA funcbody RA

    LP  shift, and go to state 16


State 12

    0 $accept: prog $end .

    $default  accept


State 13

    1 prog: dcl SEMI . prog

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4

    $default  reduce using rule 3 (prog)

    prog     go to state 17
    dcl      go to state 6
    funcdcl  go to state 7
    vardcl   go to state 8
    type     go to state 9
    func     go to state 10


State 14

    6 funcdcl: type ID . LP parm_types RP
    8 vardcl: type ID . arraylist decllist
   25 func: type ID . LP parm_types RP LA funcbody RA

    LB  shift, and go to state 18
    LP  shift, and go to state 19

    $default  reduce using rule 14 (arraylist)

    arraylist  go to state 20


State 15

    2 prog: func prog .

    $default  reduce using rule 2 (prog)


State 16

    7 funcdcl: VOID ID LP . parm_types RP
   26 func: VOID ID LP . parm_types RP LA funcbody RA

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 21

    type        go to state 22
    parm_types  go to state 23


State 17

    1 prog: dcl SEMI prog .

    $default  reduce using rule 1 (prog)


State 18

   13 arraylist: LB . INTCON RB arraylist

    INTCON  shift, and go to state 24


State 19

    6 funcdcl: type ID LP . parm_types RP
   25 func: type ID LP . parm_types RP LA funcbody RA

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 21

    type        go to state 22
    parm_types  go to state 25


State 20

    8 vardcl: type ID arraylist . decllist

    COMMA  shift, and go to state 26

    $default  reduce using rule 10 (decllist)

    decllist  go to state 27


State 21

   20 parm_types: VOID .

    $default  reduce using rule 20 (parm_types)


State 22

   21 parm_types: type . ID multidim parmlist

    ID  shift, and go to state 28


State 23

    7 funcdcl: VOID ID LP parm_types . RP
   26 func: VOID ID LP parm_types . RP LA funcbody RA

    RP  shift, and go to state 29


State 24

   13 arraylist: LB INTCON . RB arraylist

    RB  shift, and go to state 30


State 25

    6 funcdcl: type ID LP parm_types . RP
   25 func: type ID LP parm_types . RP LA funcbody RA

    RP  shift, and go to state 31


State 26

    9 decllist: COMMA . ID arraylist decllist

    ID  shift, and go to state 32


State 27

    8 vardcl: type ID arraylist decllist .

    $default  reduce using rule 8 (vardcl)


State 28

   21 parm_types: type ID . multidim parmlist

    LB  shift, and go to state 33

    $default  reduce using rule 19 (multidim)

    multidim  go to state 34


State 29

    7 funcdcl: VOID ID LP parm_types RP .
   26 func: VOID ID LP parm_types RP . LA funcbody RA

    LA  shift, and go to state 35

    $default  reduce using rule 7 (funcdcl)


State 30

   13 arraylist: LB INTCON RB . arraylist

    LB  shift, and go to state 18

    $default  reduce using rule 14 (arraylist)

    arraylist  go to state 36


State 31

    6 funcdcl: type ID LP parm_types RP .
   25 func: type ID LP parm_types RP . LA funcbody RA

    LA  shift, and go to state 37

    $default  reduce using rule 6 (funcdcl)


State 32

    9 decllist: COMMA ID . arraylist decllist

    LB  shift, and go to state 18

    $default  reduce using rule 14 (arraylist)

    arraylist  go to state 38


State 33

   18 multidim: LB . RB multidim

    RB  shift, and go to state 39


State 34

   21 parm_types: type ID multidim . parmlist

    COMMA  shift, and go to state 40

    $default  reduce using rule 12 (parmlist)

    parmlist  go to state 41


State 35

   26 func: VOID ID LP parm_types RP LA . funcbody RA

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    $default  reduce using rule 24 (funcbody)

    vardcl     go to state 57
    type       go to state 58
    funcbody   go to state 59
    stmt       go to state 60
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 36

   13 arraylist: LB INTCON RB arraylist .

    $default  reduce using rule 13 (arraylist)


State 37

   25 func: type ID LP parm_types RP LA . funcbody RA

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    $default  reduce using rule 24 (funcbody)

    vardcl     go to state 57
    type       go to state 58
    funcbody   go to state 64
    stmt       go to state 60
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 38

    9 decllist: COMMA ID arraylist . decllist

    COMMA  shift, and go to state 26

    $default  reduce using rule 10 (decllist)

    decllist  go to state 65


State 39

   18 multidim: LB RB . multidim

    LB  shift, and go to state 33

    $default  reduce using rule 19 (multidim)

    multidim  go to state 66


State 40

   11 parmlist: COMMA . type ID multidim parmlist

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    type  go to state 67


State 41

   21 parm_types: type ID multidim parmlist .

    $default  reduce using rule 21 (parm_types)


State 42

   77 expr: INTCON .

    $default  reduce using rule 77 (expr)


State 43

   78 expr: CHARCON .

    $default  reduce using rule 78 (expr)


State 44

   79 expr: FLOATCON .

    $default  reduce using rule 79 (expr)


State 45

   57 expr_left: ID . multidim_ind
   73 expr: ID . LP RP
   74     | ID . LP expr exprlist RP

    LB  shift, and go to state 68
    LP  shift, and go to state 69

    $default  reduce using rule 51 (multidim_ind)

    multidim_ind  go to state 70


State 46

   58 expr: MINUS . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 71


State 47

   59 expr: NOT . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 72


State 48

   34 stmt: WHILE . LP expr RP stmt

    LP  shift, and go to state 73


State 49

   35 stmt: FOR . LP assg SEMI expr SEMI assg RP stmt
   36     | FOR . LP assg SEMI expr SEMI RP stmt
   37     | FOR . LP assg SEMI SEMI assg RP stmt
   38     | FOR . LP SEMI expr SEMI assg RP stmt
   39     | FOR . LP SEMI SEMI assg RP stmt
   40     | FOR . LP SEMI expr SEMI RP stmt
   41     | FOR . LP assg SEMI SEMI RP stmt
   42     | FOR . LP SEMI SEMI RP stmt

    LP  shift, and go to state 74


State 50

   48 stmt: BREAK . SEMI

    SEMI  shift, and go to state 75


State 51

   49 stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 76


State 52

   43 stmt: RETURN . expr SEMI
   44     | RETURN . SEMI

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54
    SEMI      shift, and go to state 77

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 78


State 53

   32 stmt: IF . LP expr RP stmt ELSE stmt
   33     | IF . LP expr RP stmt

    LP  shift, and go to state 79


State 54

   76 expr: LP . expr RP

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 80


State 55

   45 stmt: LA . stmtlist RA

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    $default  reduce using rule 31 (stmtlist)

    vardcl     go to state 81
    type       go to state 58
    stmtlist   go to state 82
    stmt       go to state 83
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 56

   47 stmt: SEMI .

    $default  reduce using rule 47 (stmt)


State 57

   23 funcbody: vardcl . SEMI funcbody

    SEMI  shift, and go to state 84


State 58

    8 vardcl: type . ID arraylist decllist

    ID  shift, and go to state 85


State 59

   26 func: VOID ID LP parm_types RP LA funcbody . RA

    RA  shift, and go to state 86


State 60

   22 funcbody: stmt . funcbody

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    $default  reduce using rule 24 (funcbody)

    vardcl     go to state 57
    type       go to state 58
    funcbody   go to state 87
    stmt       go to state 60
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 61

   75 expr: assg .

    $default  reduce using rule 75 (expr)


State 62

   52 assg: expr_left . ASSG expr
   53     | expr_left . PLUSASSG expr
   54     | expr_left . MINUSASSG expr
   55     | expr_left . DIVIDEASSG expr
   56     | expr_left . MULTIPLYASSG expr
   72 expr: expr_left .
   80     | expr_left . SELFPLUS
   81     | expr_left . SELFMINUS

    PLUSASSG      shift, and go to state 88
    MINUSASSG     shift, and go to state 89
    MULTIPLYASSG  shift, and go to state 90
    DIVIDEASSG    shift, and go to state 91
    SELFMINUS     shift, and go to state 92
    SELFPLUS      shift, and go to state 93
    ASSG          shift, and go to state 94

    $default  reduce using rule 72 (expr)


State 63

   46 stmt: expr . SEMI
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104
    AND       shift, and go to state 105
    OR        shift, and go to state 106
    SEMI      shift, and go to state 107


State 64

   25 func: type ID LP parm_types RP LA funcbody . RA

    RA  shift, and go to state 108


State 65

    9 decllist: COMMA ID arraylist decllist .

    $default  reduce using rule 9 (decllist)


State 66

   18 multidim: LB RB multidim .

    $default  reduce using rule 18 (multidim)


State 67

   11 parmlist: COMMA type . ID multidim parmlist

    ID  shift, and go to state 109


State 68

   50 multidim_ind: LB . expr RB multidim_ind

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 110


State 69

   73 expr: ID LP . RP
   74     | ID LP . expr exprlist RP

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54
    RP        shift, and go to state 111

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 112


State 70

   57 expr_left: ID multidim_ind .

    $default  reduce using rule 57 (expr_left)


State 71

   58 expr: MINUS expr .
   60     | expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    $default  reduce using rule 58 (expr)


State 72

   59 expr: NOT expr .
   60     | expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    $default  reduce using rule 59 (expr)


State 73

   34 stmt: WHILE LP . expr RP stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 113


State 74

   35 stmt: FOR LP . assg SEMI expr SEMI assg RP stmt
   36     | FOR LP . assg SEMI expr SEMI RP stmt
   37     | FOR LP . assg SEMI SEMI assg RP stmt
   38     | FOR LP . SEMI expr SEMI assg RP stmt
   39     | FOR LP . SEMI SEMI assg RP stmt
   40     | FOR LP . SEMI expr SEMI RP stmt
   41     | FOR LP . assg SEMI SEMI RP stmt
   42     | FOR LP . SEMI SEMI RP stmt

    ID    shift, and go to state 114
    SEMI  shift, and go to state 115

    assg       go to state 116
    expr_left  go to state 117


State 75

   48 stmt: BREAK SEMI .

    $default  reduce using rule 48 (stmt)


State 76

   49 stmt: CONTINUE SEMI .

    $default  reduce using rule 49 (stmt)


State 77

   44 stmt: RETURN SEMI .

    $default  reduce using rule 44 (stmt)


State 78

   43 stmt: RETURN expr . SEMI
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104
    AND       shift, and go to state 105
    OR        shift, and go to state 106
    SEMI      shift, and go to state 118


State 79

   32 stmt: IF LP . expr RP stmt ELSE stmt
   33     | IF LP . expr RP stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 119


State 80

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr
   76     | LP expr . RP

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104
    AND       shift, and go to state 105
    OR        shift, and go to state 106
    RP        shift, and go to state 120


State 81

   30 stmtlist: vardcl . stmtlist

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    $default  reduce using rule 31 (stmtlist)

    vardcl     go to state 81
    type       go to state 58
    stmtlist   go to state 121
    stmt       go to state 83
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 82

   45 stmt: LA stmtlist . RA

    RA  shift, and go to state 122


State 83

   29 stmtlist: stmt . stmtlist

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    $default  reduce using rule 31 (stmtlist)

    vardcl     go to state 81
    type       go to state 58
    stmtlist   go to state 123
    stmt       go to state 83
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 84

   23 funcbody: vardcl SEMI . funcbody

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    INT       shift, and go to state 1
    FLOAT     shift, and go to state 2
    CHAR      shift, and go to state 3
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    $default  reduce using rule 24 (funcbody)

    vardcl     go to state 57
    type       go to state 58
    funcbody   go to state 124
    stmt       go to state 60
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 85

    8 vardcl: type ID . arraylist decllist

    LB  shift, and go to state 18

    $default  reduce using rule 14 (arraylist)

    arraylist  go to state 20


State 86

   26 func: VOID ID LP parm_types RP LA funcbody RA .

    $default  reduce using rule 26 (func)


State 87

   22 funcbody: stmt funcbody .

    $default  reduce using rule 22 (funcbody)


State 88

   53 assg: expr_left PLUSASSG . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 125


State 89

   54 assg: expr_left MINUSASSG . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 126


State 90

   56 assg: expr_left MULTIPLYASSG . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 127


State 91

   55 assg: expr_left DIVIDEASSG . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 128


State 92

   81 expr: expr_left SELFMINUS .

    $default  reduce using rule 81 (expr)


State 93

   80 expr: expr_left SELFPLUS .

    $default  reduce using rule 80 (expr)


State 94

   52 assg: expr_left ASSG . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 129


State 95

   69 expr: expr LT . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 130


State 96

   66 expr: expr LE . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 131


State 97

   67 expr: expr GE . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 132


State 98

   68 expr: expr GT . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 133


State 99

   64 expr: expr EQ . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 134


State 100

   65 expr: expr NEQ . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 135


State 101

   60 expr: expr PLUS . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 136


State 102

   61 expr: expr MINUS . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 137


State 103

   62 expr: expr MULTIPLY . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 138


State 104

   63 expr: expr DIVIDE . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 139


State 105

   70 expr: expr AND . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 140


State 106

   71 expr: expr OR . expr

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 141


State 107

   46 stmt: expr SEMI .

    $default  reduce using rule 46 (stmt)


State 108

   25 func: type ID LP parm_types RP LA funcbody RA .

    $default  reduce using rule 25 (func)


State 109

   11 parmlist: COMMA type ID . multidim parmlist

    LB  shift, and go to state 33

    $default  reduce using rule 19 (multidim)

    multidim  go to state 142


State 110

   50 multidim_ind: LB expr . RB multidim_ind
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104
    AND       shift, and go to state 105
    OR        shift, and go to state 106
    RB        shift, and go to state 143


State 111

   73 expr: ID LP RP .

    $default  reduce using rule 73 (expr)


State 112

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr
   74     | ID LP expr . exprlist RP

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104
    AND       shift, and go to state 105
    OR        shift, and go to state 106
    COMMA     shift, and go to state 144

    $default  reduce using rule 28 (exprlist)

    exprlist  go to state 145


State 113

   34 stmt: WHILE LP expr . RP stmt
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104
    AND       shift, and go to state 105
    OR        shift, and go to state 106
    RP        shift, and go to state 146


State 114

   57 expr_left: ID . multidim_ind

    LB  shift, and go to state 68

    $default  reduce using rule 51 (multidim_ind)

    multidim_ind  go to state 70


State 115

   38 stmt: FOR LP SEMI . expr SEMI assg RP stmt
   39     | FOR LP SEMI . SEMI assg RP stmt
   40     | FOR LP SEMI . expr SEMI RP stmt
   42     | FOR LP SEMI . SEMI RP stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54
    SEMI      shift, and go to state 147

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 148


State 116

   35 stmt: FOR LP assg . SEMI expr SEMI assg RP stmt
   36     | FOR LP assg . SEMI expr SEMI RP stmt
   37     | FOR LP assg . SEMI SEMI assg RP stmt
   41     | FOR LP assg . SEMI SEMI RP stmt

    SEMI  shift, and go to state 149


State 117

   52 assg: expr_left . ASSG expr
   53     | expr_left . PLUSASSG expr
   54     | expr_left . MINUSASSG expr
   55     | expr_left . DIVIDEASSG expr
   56     | expr_left . MULTIPLYASSG expr

    PLUSASSG      shift, and go to state 88
    MINUSASSG     shift, and go to state 89
    MULTIPLYASSG  shift, and go to state 90
    DIVIDEASSG    shift, and go to state 91
    ASSG          shift, and go to state 94


State 118

   43 stmt: RETURN expr SEMI .

    $default  reduce using rule 43 (stmt)


State 119

   32 stmt: IF LP expr . RP stmt ELSE stmt
   33     | IF LP expr . RP stmt
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104
    AND       shift, and go to state 105
    OR        shift, and go to state 106
    RP        shift, and go to state 150


State 120

   76 expr: LP expr RP .

    $default  reduce using rule 76 (expr)


State 121

   30 stmtlist: vardcl stmtlist .

    $default  reduce using rule 30 (stmtlist)


State 122

   45 stmt: LA stmtlist RA .

    $default  reduce using rule 45 (stmt)


State 123

   29 stmtlist: stmt stmtlist .

    $default  reduce using rule 29 (stmtlist)


State 124

   23 funcbody: vardcl SEMI funcbody .

    $default  reduce using rule 23 (funcbody)


State 125

   53 assg: expr_left PLUSASSG expr .
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 53 (assg)


State 126

   54 assg: expr_left MINUSASSG expr .
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 54 (assg)


State 127

   56 assg: expr_left MULTIPLYASSG expr .
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 56 (assg)


State 128

   55 assg: expr_left DIVIDEASSG expr .
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 55 (assg)


State 129

   52 assg: expr_left ASSG expr .
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 52 (assg)


State 130

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   69     | expr LT expr .
   70     | expr . AND expr
   71     | expr . OR expr

    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 69 (expr)


State 131

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   66     | expr LE expr .
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 66 (expr)


State 132

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   67     | expr GE expr .
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 67 (expr)


State 133

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   68     | expr GT expr .
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 68 (expr)


State 134

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   64     | expr EQ expr .
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 64 (expr)


State 135

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   65     | expr NEQ expr .
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 65 (expr)


State 136

   60 expr: expr . PLUS expr
   60     | expr PLUS expr .
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 60 (expr)


State 137

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   61     | expr MINUS expr .
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 61 (expr)


State 138

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   62     | expr MULTIPLY expr .
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    $default  reduce using rule 62 (expr)


State 139

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   63     | expr DIVIDE expr .
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    $default  reduce using rule 63 (expr)


State 140

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   70     | expr AND expr .
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 70 (expr)


State 141

   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr
   71     | expr OR expr .

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104

    $default  reduce using rule 71 (expr)


State 142

   11 parmlist: COMMA type ID multidim . parmlist

    COMMA  shift, and go to state 40

    $default  reduce using rule 12 (parmlist)

    parmlist  go to state 151


State 143

   50 multidim_ind: LB expr RB . multidim_ind

    LB  shift, and go to state 68

    $default  reduce using rule 51 (multidim_ind)

    multidim_ind  go to state 152


State 144

   27 exprlist: COMMA . expr exprlist

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 153


State 145

   74 expr: ID LP expr exprlist . RP

    RP  shift, and go to state 154


State 146

   34 stmt: WHILE LP expr RP . stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    stmt       go to state 155
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 147

   39 stmt: FOR LP SEMI SEMI . assg RP stmt
   42     | FOR LP SEMI SEMI . RP stmt

    ID  shift, and go to state 114
    RP  shift, and go to state 156

    assg       go to state 157
    expr_left  go to state 117


State 148

   38 stmt: FOR LP SEMI expr . SEMI assg RP stmt
   40     | FOR LP SEMI expr . SEMI RP stmt
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104
    AND       shift, and go to state 105
    OR        shift, and go to state 106
    SEMI      shift, and go to state 158


State 149

   35 stmt: FOR LP assg SEMI . expr SEMI assg RP stmt
   36     | FOR LP assg SEMI . expr SEMI RP stmt
   37     | FOR LP assg SEMI . SEMI assg RP stmt
   41     | FOR LP assg SEMI . SEMI RP stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    LP        shift, and go to state 54
    SEMI      shift, and go to state 159

    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 160


State 150

   32 stmt: IF LP expr RP . stmt ELSE stmt
   33     | IF LP expr RP . stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    stmt       go to state 161
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 151

   11 parmlist: COMMA type ID multidim parmlist .

    $default  reduce using rule 11 (parmlist)


State 152

   50 multidim_ind: LB expr RB multidim_ind .

    $default  reduce using rule 50 (multidim_ind)


State 153

   27 exprlist: COMMA expr . exprlist
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104
    AND       shift, and go to state 105
    OR        shift, and go to state 106
    COMMA     shift, and go to state 144

    $default  reduce using rule 28 (exprlist)

    exprlist  go to state 162


State 154

   74 expr: ID LP expr exprlist RP .

    $default  reduce using rule 74 (expr)


State 155

   34 stmt: WHILE LP expr RP stmt .

    $default  reduce using rule 34 (stmt)


State 156

   42 stmt: FOR LP SEMI SEMI RP . stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    stmt       go to state 163
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 157

   39 stmt: FOR LP SEMI SEMI assg . RP stmt

    RP  shift, and go to state 164


State 158

   38 stmt: FOR LP SEMI expr SEMI . assg RP stmt
   40     | FOR LP SEMI expr SEMI . RP stmt

    ID  shift, and go to state 114
    RP  shift, and go to state 165

    assg       go to state 166
    expr_left  go to state 117


State 159

   37 stmt: FOR LP assg SEMI SEMI . assg RP stmt
   41     | FOR LP assg SEMI SEMI . RP stmt

    ID  shift, and go to state 114
    RP  shift, and go to state 167

    assg       go to state 168
    expr_left  go to state 117


State 160

   35 stmt: FOR LP assg SEMI expr . SEMI assg RP stmt
   36     | FOR LP assg SEMI expr . SEMI RP stmt
   60 expr: expr . PLUS expr
   61     | expr . MINUS expr
   62     | expr . MULTIPLY expr
   63     | expr . DIVIDE expr
   64     | expr . EQ expr
   65     | expr . NEQ expr
   66     | expr . LE expr
   67     | expr . GE expr
   68     | expr . GT expr
   69     | expr . LT expr
   70     | expr . AND expr
   71     | expr . OR expr

    LT        shift, and go to state 95
    LE        shift, and go to state 96
    GE        shift, and go to state 97
    GT        shift, and go to state 98
    EQ        shift, and go to state 99
    NEQ       shift, and go to state 100
    PLUS      shift, and go to state 101
    MINUS     shift, and go to state 102
    MULTIPLY  shift, and go to state 103
    DIVIDE    shift, and go to state 104
    AND       shift, and go to state 105
    OR        shift, and go to state 106
    SEMI      shift, and go to state 169


State 161

   32 stmt: IF LP expr RP stmt . ELSE stmt
   33     | IF LP expr RP stmt .

    ELSE  shift, and go to state 170

    $default  reduce using rule 33 (stmt)


State 162

   27 exprlist: COMMA expr exprlist .

    $default  reduce using rule 27 (exprlist)


State 163

   42 stmt: FOR LP SEMI SEMI RP stmt .

    $default  reduce using rule 42 (stmt)


State 164

   39 stmt: FOR LP SEMI SEMI assg RP . stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    stmt       go to state 171
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 165

   40 stmt: FOR LP SEMI expr SEMI RP . stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    stmt       go to state 172
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 166

   38 stmt: FOR LP SEMI expr SEMI assg . RP stmt

    RP  shift, and go to state 173


State 167

   41 stmt: FOR LP assg SEMI SEMI RP . stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    stmt       go to state 174
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 168

   37 stmt: FOR LP assg SEMI SEMI assg . RP stmt

    RP  shift, and go to state 175


State 169

   35 stmt: FOR LP assg SEMI expr SEMI . assg RP stmt
   36     | FOR LP assg SEMI expr SEMI . RP stmt

    ID  shift, and go to state 114
    RP  shift, and go to state 176

    assg       go to state 177
    expr_left  go to state 117


State 170

   32 stmt: IF LP expr RP stmt ELSE . stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    stmt       go to state 178
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 171

   39 stmt: FOR LP SEMI SEMI assg RP stmt .

    $default  reduce using rule 39 (stmt)


State 172

   40 stmt: FOR LP SEMI expr SEMI RP stmt .

    $default  reduce using rule 40 (stmt)


State 173

   38 stmt: FOR LP SEMI expr SEMI assg RP . stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    stmt       go to state 179
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 174

   41 stmt: FOR LP assg SEMI SEMI RP stmt .

    $default  reduce using rule 41 (stmt)


State 175

   37 stmt: FOR LP assg SEMI SEMI assg RP . stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    stmt       go to state 180
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 176

   36 stmt: FOR LP assg SEMI expr SEMI RP . stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    stmt       go to state 181
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 177

   35 stmt: FOR LP assg SEMI expr SEMI assg . RP stmt

    RP  shift, and go to state 182


State 178

   32 stmt: IF LP expr RP stmt ELSE stmt .

    $default  reduce using rule 32 (stmt)


State 179

   38 stmt: FOR LP SEMI expr SEMI assg RP stmt .

    $default  reduce using rule 38 (stmt)


State 180

   37 stmt: FOR LP assg SEMI SEMI assg RP stmt .

    $default  reduce using rule 37 (stmt)


State 181

   36 stmt: FOR LP assg SEMI expr SEMI RP stmt .

    $default  reduce using rule 36 (stmt)


State 182

   35 stmt: FOR LP assg SEMI expr SEMI assg RP . stmt

    INTCON    shift, and go to state 42
    CHARCON   shift, and go to state 43
    FLOATCON  shift, and go to state 44
    ID        shift, and go to state 45
    MINUS     shift, and go to state 46
    NOT       shift, and go to state 47
    WHILE     shift, and go to state 48
    FOR       shift, and go to state 49
    BREAK     shift, and go to state 50
    CONTINUE  shift, and go to state 51
    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    LP        shift, and go to state 54
    LA        shift, and go to state 55
    SEMI      shift, and go to state 56

    stmt       go to state 183
    assg       go to state 61
    expr_left  go to state 62
    expr       go to state 63


State 183

   35 stmt: FOR LP assg SEMI expr SEMI assg RP stmt .

    $default  reduce using rule 35 (stmt)
